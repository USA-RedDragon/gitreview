version: 2
jobs:
  build-api:
    docker:
      - image: circleci/node:10.15

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Dependencies
          command: cd api && npm ci
      - run:
          name: Build
          command: docker build -t jamcswain/gitreview-api api/
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push
          command: docker push jamcswain/gitreview-api

  test-api:
    docker:
      - image: circleci/node:10.15

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install CodeCov
          command: npm install -g codecov
      - run:
          name: Install Dependencies
          command: cd api && npm ci
      - run:
          name: Test
          command: cd api && npm run test || true
      - run:
          name: Upload Coverage
          command: cd api && npm run coverage

  build-caddy:
    docker:
      - image: circleci/node:10.15

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build
          command: docker build -t jamcswain/gitreview-caddy caddy/
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push
          command: docker push jamcswain/gitreview-caddy

  build-client:
    docker:
      - image: circleci/node:10.15

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build
          command: docker build -t jamcswain/gitreview-client client/
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push
          command: docker push jamcswain/gitreview-client

  build-gitserver:
    docker:
      - image: circleci/node:10.15

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build
          command: docker build -t jamcswain/gitreview-gitserver gitserver/
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push
          command: docker push jamcswain/gitreview-gitserver

  deploy:
    docker:
      - image: alpine
    steps:
      - run:
          name: Install SSH
          command: apk add --no-cache openssh
      - add_ssh_keys:
          fingerprints:
            - "9b:96:d8:66:2b:5f:a3:15:c5:cb:e5:24:0f:4f:bc:25"
      - run:
          name: Add known_hosts
          command: echo "$SSH_HOSTNAME,$SSH_IP $SSH_SCHEME $SSH_SERVER_KEY" >> ~/.ssh/known_hosts
      - run:
          name: Bring docker-compose down
          command: ssh $SSH_USERNAME@$SSH_HOSTNAME docker-compose -f gitreview/docker-compose.yml down
      - run:
          name: Pull Docker images
          command: ssh $SSH_USERNAME@$SSH_HOSTNAME docker-compose -f gitreview/docker-compose.yml pull
      - run:
          name: Bring docker-compose up
          command: ssh $SSH_USERNAME@$SSH_HOSTNAME docker-compose -f gitreview/docker-compose.yml up -d

workflows:
  version: 2
  workflow:
    jobs:
      - test-api:
          filters:
            branches:
              only:
                - master
      - build-api:
          requires:
            - test-api
          filters:
            branches:
              only:
                - master
      - build-caddy:
          filters:
            branches:
              only:
                - master
      - build-client:
          filters:
            branches:
              only:
                - master
      - build-gitserver:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build-api
            - build-caddy
            - build-client
            - build-gitserver
          filters:
            branches:
              only:
                - master